name: Build, Test, Deploy

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.12'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        
      - name: Install dependencies
        run: |
          cd kafka_producer
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Test with pytest
        run: |
          cd kafka_producer
          pip install pytest pytest-cov
          pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
      
      - name: Sync to S3
        run: |
          aws s3 sync ./kafka_broker s3://citibike-data-platform-project-bucket/kafka_broker
          aws s3 sync ./kafka_producer s3://citibike-data-platform-project-bucket/kafka_producer
        
      - name: Deploy Kafka Broker to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.CITIBIKE_KAFKA_BROKER_HOST }}
          USER: ${{ secrets.EC2_USER }}          
        run: |
          echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
          sudo snap install aws-cli --classic
          sudo snap install docker
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          rm -rf kafka_broker
          mkdir kafka_broker
          cd kafka_broker
          aws s3 sync s3://citibike-data-platform-project-bucket/kafka_broker/ .
          sudo docker compose down
          sudo docker compose up -d --force-recreate
          '

      - name: Deploy Kafka Producer to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.CITIBIKE_KAFKA_PRODUCER_HOST }}
          USER: ${{ secrets.EC2_USER }}          
        run: |
          echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
          sudo snap install aws-cli --classic
          sudo snap install docker
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          rm -rf producer_deploy
          mkdir producer_deploy
          cd producer_deploy
          aws s3 sync s3://citibike-data-platform-project-bucket/kafka_producer/ .
          sudo docker compose down
          sudo docker compose build
          sudo docker compose up -d --force-recreate
          '
